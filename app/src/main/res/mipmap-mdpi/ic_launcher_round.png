package krolkozak.project.app.tworzenietrasy;

import android.content.Context;
import android.location.Address;
import android.location.Geocoder;
import android.os.Build;
import android.util.Log;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.RequiresApi;

import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.DocumentReference;
import com.google.firebase.firestore.FirebaseFirestore;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.osmdroid.bonuspack.routing.MapQuestRoadManager;
import org.osmdroid.bonuspack.routing.Road;
import org.osmdroid.bonuspack.routing.RoadManager;
import org.osmdroid.util.BoundingBox;
import org.osmdroid.util.GeoPoint;
import org.osmdroid.views.CustomZoomButtonsController;
import org.osmdroid.views.MapView;
import org.osmdroid.views.overlay.Marker;
import org.osmdroid.views.overlay.Overlay;
import org.osmdroid.views.overlay.Polyline;

import java.io.IOException;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

import krolkozak.project.app.InterfejsAPI;
import krolkozak.project.app.R;
import krolkozak.project.app.Ustawienia;
import krolkozak.project.app.bazadanych.Historia;
import krolkozak.project.app.pomocnicze.WyswietlanieMapy;

@RequiresApi(api = Build.VERSION_CODES.O)
public class Trasa {
    // rozmiar ramki wokół kadru widoku
    private final int ROZMIAR_RAMKI = 200;
    // widok mapy
    public MapView mapa;
    // koordynaty geograficzne
    public double szerGeog1, dlugGeog1;
    public double szerGeog2, dlugGeog2;
    public ArrayList<PunkPostoju> przystanki = new ArrayList<>();
    //środek transportu
    public String srodek_transportu;
    private String transport_doURL = "";
    // lista punktów geograficznych
    public ArrayList<GeoPoint> punkty = new ArrayList<>();
    // pomocnicza nazwa aplikacji do debuggowania
    private final String nazwaApki = "TRAVEL_APP";
    public OffsetDateTime czasWyjazdu = OffsetDateTime.now();
    //warunki pogodowe na trasie
    private Pogoda pogoda = new Pogoda();
    private JSONArray miejscaPogodowe = new JSONArray();
    private String lokalizacja_poczatkowa = "";
    private String lokalizacja_koncowa = "";

    // metoda czyszcząca mapę (punkty i trasa)
    public void wyczyscMape() {
        // usunięcie punktów z listy
        punkty = new ArrayList<>();
        List<Overlay> mapOverlays = mapa.getOverlays();

        // usunięcie wszystkich rzeczy z mapy
        for (int i = mapOverlays.size() - 1; i >= 0; i--) {
            mapOverlays.remove(mapOverlays.get(i));
        }
    }

    @RequiresApi(api = Build.VERSION_CODES.O)
    // metoda, która ustawia początkowe parametry mapy oraz wyświetla na ekranie
    public void zainicjujMape() {
        // -------------- WYSWIETLANIE MAPY --------------
        // ustawienie przycisków przybliżania i oddalania widoku mapy na stale widoczne
        mapa.getZoomController().setVisibility(CustomZoomButtonsController.Visibility.ALWAYS);
        // włączenie obsługi wi